<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" "http://struts.apache.org/dtds/struts-2.3.dtd">
 <struts>
     <!-- 所有匹配*.action的请求都由struts2处理 -->
     <constant name="struts.action.extension" value="action" />
     <!-- 是否启用开发模式 -->
     <constant name="struts.devMode" value="true" />
     <!-- struts配置文件改动后，是否重新加载 -->
     <constant name="struts.configuration.xml.reload" value="true" />
     <!-- 设置浏览器是否缓存静态内容 -->
     <constant name="struts.serve.static.browserCache" value="false" />
     <!-- 请求参数的编码方式 -->
     <constant name="struts.i18n.encoding" value="utf-8" />
     <!-- 每次HTTP请求系统都重新加载资源文件，有助于开发 -->
     <constant name="struts.i18n.reload" value="true" />
  <!-- 文件上传最大值 -->
    <constant name="struts.multipart.maxSize" value="104857600" />
    <!-- 让struts2支持动态方法调用 -->
    <constant name="struts.enable.DynamicMethodInvocation" value="true" />
    <!-- Action名称中是否还是用斜线 -->
    <constant name="struts.enable.SlashesInActionNames" value="false" />
    <!-- 允许标签中使用表达式语法 -->
    <constant name="struts.tag.altSyntax" value="true" />
    <!-- 对于WebLogic,Orion,OC4J此属性应该设置成true -->
    <constant name="struts.dispatcher.parametersWorkaround" value="false" />

    <package name="default" extends="struts-default">
    <action name="login" class="com.liu.action.LoginAction">
    <!--  -->
    <param name="pggg">${pwd}</param>
    <!--默认的  name="success" type="dispacther" -->
        <!--  <result >  
           /index.jsp
        </result> --> 
       <!--  <result name="success" type="chain">user_show.action</result>  -->
     <result name="success" type="redirect">user_see.action?name=${username}</result> 
        
        <!-- chain类型
  Struts2框架支持配置多个Action组成一个链或者工作流来处理用户的请求，
  而Action链的实现，是通过拦截器ChainingInterceptor完成的。
  ChainingInterceptor在源执行完毕后，将源Action的用户请求参数、值栈、session的数据赋值给目的Action，
  也就是说，在执行多个Action过程中，参数都是保留的。
  Struts2框架并不推荐开发者使用这种Action链式的结果类型，该框架推荐使用redirect-action类型。
  
  redirect类型
  redirect结果类型与Struts2框架默认的结果类型dispatcher相对应。
  到dispatcher类型是将请求转发到指定的视图资源，而redirect类型是重定向到指定的视图资源。
  重定向将会丢失所有的参数、值栈和请求属性，即同时失去了Action的处理结果。而dispatcher是类型转发，
  将会把上述的所有数据资源转发给视图资源
  
  
     redirect-action类型
  redirect-action结果类型与redirect结果类型非常相似，都是重新生成一个新的请求，都是重新定向
   -->
   	</action>
    
    <action name="user_*" class="com.liu.action.showAction" method="{1}">
    <!--默认的  name="success" type="dispacther" -->
         <result name="{1}">  
           /{1}.jsp
        </result>  
        </action>
    </package>
    <include file="com/liu/action/result.xml"></include>
</struts>